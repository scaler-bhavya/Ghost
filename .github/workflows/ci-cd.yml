name: Custom CI/CD for Ghost CMS (Learner Edition)
on:
  push:
    branches: [main]
    paths:
      - 'ghost/core/**'
      - 'Dockerfile'
      - 'package.json'
      - 'yarn.lock'
  pull_request:
    branches: [main]
    paths:
      - 'ghost/core/**'
      - 'Dockerfile'
      - 'package.json'
      - 'yarn.lock'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: testpass
          MYSQL_DATABASE: ghost_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.13.1
          cache: 'yarn'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Suppress warnings
        run: export NODE_NO_WARNINGS=1
      - name: Run tests
        env:
          NODE_ENV: testing
          database__client: mysql
          database__connection__host: localhost
          database__connection__user: root
          database__connection__password: testpass
          database__connection__database: ghost_test
          database__connection__port: 3306
        run: cd ghost/core && yarn test

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/custom-ghost:latest
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /opt/ghost || mkdir -p /opt/ghost && cd /opt/ghost
            git pull origin main || git clone https://github.com/${{ github.repository }} .
            docker compose pull
            docker compose up -d --build
            docker image prune -f
